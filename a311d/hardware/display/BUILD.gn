# Copyright (c) 2022 Unionman Technology Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("display_group") {
  deps = [
    ":display_device",
    ":display_gfx",
    ":display_gralloc",
    ":display_layer",
    ":higbm",
  ]
}

ohos_static_library("higbm") {
  sources = [ "src/display_gralloc/hi_gbm.c" ]
  include_dirs = [ "include" ]
  output_name = "higbm"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
  ]
  deps = [ "//third_party/libdrm:libdrm" ]
  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}

ohos_shared_library("display_gralloc") {
  sources = [
    "src/display_gralloc/display_gralloc.c",
    "src/display_gralloc/display_gralloc_gbm.c",
  ]
  include_dirs = [
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/osal/include",
    "//utils/native/base/include",
    "//foundation/graphic/standard/utils/include",
    "//foundation/graphic/standard/prebuilts/librarys/drm/include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
  ]
  output_name = "display_gralloc"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
  ]
  deps = [
    ":higbm",
    "//third_party/libdrm:libdrm",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}

ohos_shared_library("display_gfx") {
  sources = [ "src/display_gfx/display_gfx.c" ]
  include_dirs = [
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/adapter/osal/include/",
    "//utils/native/base/include",
    "//foundation/graphic/standard/utils/include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
    "//device/soc/amlogic/a311d/hardware/ge2d/include",
  ]
  output_name = "display_gfx"
  cflags = [ "-Wno-macro-redefined" ]
  deps = [
    ":display_gralloc",
    "//device/soc/amlogic/a311d/hardware/ge2d:libge2d",
    "//utils/native/base:utils",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}

ohos_shared_library("display_device") {
  sources = [
    "src/display_device/drm_connector.cpp",
    "src/display_device/drm_crtc.cpp",
    "src/display_device/drm_device.cpp",
    "src/display_device/drm_display.cpp",
    "src/display_device/drm_encoder.cpp",
    "src/display_device/drm_plane.cpp",
    "src/display_device/drm_vsync_worker.cpp",
    "src/display_device/fb_composition.cpp",
    "src/display_device/fb_device.cpp",
    "src/display_device/fb_display.cpp",
    "src/display_device/hdi_composer.cpp",
    "src/display_device/hdi_device_interface.cpp",
    "src/display_device/hdi_display.cpp",
    "src/display_device/hdi_drm_composition.cpp",
    "src/display_device/hdi_drm_layer.cpp",
    "src/display_device/hdi_gfx_composition.cpp",
    "src/display_device/hdi_layer.cpp",
    "src/display_device/hdi_session.cpp",
    "src/display_device/hdi_video_composition.cpp",
    "src/display_device/sorft_vsync.cpp",
    "src/utils/display_adapter.cpp",
  ]
  output_name = "display_device"
  include_dirs = [
    "src/display_device",
    "src/utils",
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/osal/include",
    "//utils/native/base/include",
    "//foundation/graphic/standard/utils/include",
    "//foundation/graphic/standard/prebuilts/librarys/drm/include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
  ]
  deps = [
    ":display_gfx",
    ":display_gralloc",
    "//third_party/libdrm:libdrm",
    "//utils/native/base:utils",
  ]
  cflags = [ "-Wno-unused-function" ]
  external_deps = [
    "hdf_core:libhdf_utils",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}

ohos_shared_library("display_layer") {
  output_name = "display_layer"
  sources = [
    "//drivers/peripheral/display/hal/disp_hal.c",
    "src/display_layer/display_layer.c",
  ]
  include_dirs = [
    "include",
    "//drivers/peripheral/display/hal",
    "//drivers/peripheral/display/interfaces/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    "//drivers/peripheral/base",
  ]
  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  external_deps = [
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]
  defines = [ "__USER__" ]
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
    "-Wno-format",
    "-Wno-format-extra-args",
  ]
  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}
