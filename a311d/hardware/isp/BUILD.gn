# Copyright (C) 2022 Unionman Technology Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

# ISP
ohos_prebuilt_executable("iv009_isp") {
  if (target_cpu == "arm") {
    source = "bin/iv009_isp"
  } else {
    source = "bin64/iv009_isp"
  }
  install_images = [ chipset_base_dir ]
  part_name = "unionman_products"
  install_enable = true
}

ohos_prebuilt_etc("libisp_c.so.6") {
  if (target_cpu == "arm") {
    source = "lib/libisp_c.so.6"
    module_install_dir = "lib/glibc"
  } else {
    source = "lib64/libc.so.6"
    module_install_dir = "lib64/glibc"
  }
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
  install_enable = true
}

ohos_prebuilt_etc("libdl.so.2") {
  if (target_cpu == "arm") {
    source = "lib/libdl.so.2"
    module_install_dir = "lib/glibc"
  } else {
    source = "lib64/libdl.so.2"
    module_install_dir = "lib64/glibc"
  }
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
  install_enable = true
}

ohos_prebuilt_etc("libisp_pthread.so.0") {
  if (target_cpu == "arm") {
    source = "lib/libisp_pthread.so.0"
    module_install_dir = "lib/glibc"
  } else {
    source = "lib64/libpthread.so.0"
    module_install_dir = "lib64/glibc"
  }
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
  install_enable = true
}

ohos_prebuilt_executable("ld-linux.so") {
  if (target_cpu == "arm") {
    source = "lib/ld-linux-armhf.so.3"
  } else {
    source = "lib64/ld-linux-aarch64.so.1"
  }
  module_install_dir = "bin"
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
  install_enable = true
}

if (target_cpu == "arm64") {
  ohos_prebuilt_executable("libstdc") {
    source = "lib64/libstdc++.so.6.0"
    module_install_dir = "lib64/glibc"
    install_images = [ chipset_base_dir ]
    symlink_target_name = [ "libstdc++.so.6" ]

    part_name = "unionman_products"
    install_enable = true
  }

  ohos_prebuilt_executable("libgcc_s") {
    source = "lib64/libgcc_s.so.1"
    module_install_dir = "lib64/glibc"
    install_images = [ chipset_base_dir ]

    part_name = "unionman_products"
    install_enable = true
  }

  ohos_prebuilt_executable("librt") {
    source = "lib64/librt.so.6"
    module_install_dir = "lib64/glibc"
    install_images = [ chipset_base_dir ]
    symlink_target_name = [ "librt.so.1" ]

    part_name = "unionman_products"
    install_enable = true
  }

  ohos_prebuilt_executable("libm") {
    source = "lib64/libm.so.6"
    module_install_dir = "lib64/glibc"
    install_images = [ chipset_base_dir ]

    part_name = "unionman_products"
    install_enable = true
  }
}

ohos_prebuilt_etc("iv009_isp.ko") {
  source = "modules/iv009_isp.ko"
  module_install_dir = "modules"
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
}

ohos_prebuilt_etc("iv009_isp_iq.ko") {
  source = "modules/iv009_isp_iq.ko"
  module_install_dir = "modules"
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
}

ohos_prebuilt_etc("iv009_isp_lens.ko") {
  source = "modules/iv009_isp_lens.ko"
  module_install_dir = "modules"
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
}

ohos_prebuilt_etc("iv009_isp_sensor.ko") {
  source = "modules/iv009_isp_sensor.ko"
  module_install_dir = "modules"
  install_images = [ chipset_base_dir ]

  part_name = "unionman_products"
}

group("isp") {
  deps = [
    ":iv009_isp",
    ":iv009_isp.ko",
    ":iv009_isp_iq.ko",
    ":iv009_isp_lens.ko",
    ":iv009_isp_sensor.ko",
    ":ld-linux.so",
    ":libdl.so.2",
    ":libisp_c.so.6",
    ":libisp_pthread.so.0",
  ]

  if (target_cpu == "arm64") {
    deps += [
      ":libgcc_s",
      ":libm",
      ":librt",
      ":libstdc",
    ]
  }
}
